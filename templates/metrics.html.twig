{# templates/lucky_number.html.twig #}

{% extends "base.html.twig" %}

{% block title %}Metrics{% endblock %}

{% block body %}
    <h1>Metrics</h1>
    <p>Welcome to my metrics page.</p>
<div class="wrapper">    
	<div class="report-sidebar">
		<ul>
		    <li><a href="#introduktion">Introduktion</a></li>
		    <li><a href="#Phpmetrics">Phpmetrics</a></li>
		    <li><a href="#Scrutinizer">Scrutinizer</a></li>
		    <li><a href="#Förbättringar">Förbättringar</a></li>
		    <li><a href="#Diskussion">Diskussion</a></li>
		</ul>
	</div>
	<div class="report-content">
	
		<h2 id = "introduktion">Introduktion</h2>
		{% apply markdown_to_html %}
du förklarar de sex C:na och hur de kan påverka kodens kvalitet. Exemplifiera, där det passar, med några mätvärden som är kopplad till din egen kod och ge en kort förklaring av mätvärdet relaterat till kodkvalitet.
        {% endapply %}
        
		<h2 id = "Phpmetrics">Phpmetrics</h2>
		{% apply markdown_to_html %}
analysera dess rapport för din kod. Använd mätvärdena för att hitta flaskhalsar och svaga punkter i din kod (minst 3 stycken). Du vill hitta kod som har förbättringspotential. Visualisera med någon representativ bild från rapporten.
        {% endapply %}
        
		<h2 id = "Scrutinizer">Scrutinizer</h2>
		{% apply markdown_to_html %}
analysera dess rapport för din kod. Gör på samma sätt som du gjorde med Phpmetrics.

Inkludera klickbara Scrutinizer badges i din rapport för build, coverage och quality.
Placera samma badges i din README.md.

I ovan analys så kopplar du dina “findings” till 6C. Använd gärna något ytterligare mättal som du finner relevant och intressant.
        {% endapply %}
        
		<h2 id = "Förbättringar">Förbättringar</h2>
		{% apply markdown_to_html %}
du väljer minst 3 förbättringar som du vill göra med din kod (gärna fler).

Exempel på förbättringar kan vara:

1. Fixa issues
2. Öka kodtäckning
3. Fokusera på kvalitetsindex i Scrutinizer
4. Minska komplexiteten i class/metod
Börja med att skriva om förbättringarna, vad du tänker göra, varför du väljer dem och hur du tror det kommer påverka mätvärdena för kvalitet.

Implementera sedan förbättringarna.
Analysera därefter rapporterna från phpmetrics och Scrutinizer och notera de nya mätvärdena.
Gör det tydligt hur mätvärdena såg ut innan och efter dina förbättringar.

        {% endapply %}
        
		<h2 id = "Diskussion">Diskussion</h2>
		{% apply markdown_to_html %}
		du diskuterar kort kring det du nyss gjort.

Kan man aktivt jobba med kodkvalitet och “clean code” på detta sättet?
Finns det fördelar och kanske nackdelar?
Ser du andra möjligheter att jobba mot “clean code”?
        {% endapply %}
	</div>
</div>
{% endblock %}
